row_min[i]<-min(distances)
}else{
next
}
}
overall_min[i]<-min(row_min)
}
distances[1]
distances<-c(0)
distances[1]
distances[1]<-2
distances[1]
row_min<-c(0)
overall_min<-c(0)
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(distances)
}else{
next
}
}
overall_min[i]<-min(row_min)
distances<-c(0)
}
min(overall_min)
row_min
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(distances)
}else{
next
}
}
overall_min[i]<-min(row_min)
}
row_min
distances<-c()
row_min<-c()
overall_min<-c()
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(distances)
}else{
next
}
}
overall_min[i]<-min(row_min)
}
row_min
distances<-c()
row_min<-c()
overall_min<-c()
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(-distances[i])
}else{
next
}
}
overall_min[i]<-min(row_min)
}
row_min
distances<-c()
overall_min<-c()
row_min<-c()
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(subset(distances,drop=distances[i==j]))
}else{
next
}
}
overall_min[i]<-min(row_min)
}
overall_min
row_min
distances
distances<-c()
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(!distances[i==j])
}else{
next
}
}
overall_min[i]<-min(row_min)
}
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
overall_min[i]<-min(row_min)
}
row_min
overall_min
min(overall_min)
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
min(dist[i!=j])
}
}
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
print(min(dist[i!=j]))
}
else{}
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
for(j in 1:ncol(dist))
{
if(i!=j){
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
min(dist[i!=j])
}
else{
next
}
}
}
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
print(min(dist[i!=j]))
}
else{}
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
print(min(dist[i!=j]))
}
}
}
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
min(dist[i!=j])
}
else{
next
}
}
}
}
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
print(min(dist[i!=j]))
}
else{
next
}
}
}
dist<-matrix(c(0.00,0.71,5.66,0.71,0.00,4.95,5.66,4.95,0.00),
nrow=3,ncol=3,dimnames=list(c("A","B","C"),c("A","B","C")))
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
overall_min[i]<-min(row_min)
print(which.min(overall_min))
}
row_min
overall_min
dist
dist<-matrix(c(0.00,0.71,5.66,0.71,0.00,4.95,5.66,4.95,0.00),
nrow=3,ncol=3,dimnames=list(c("A","B","C"),c("A","B","C")))
dist
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
## overall_min[i]<-min(row_min)
## print(which.min(overall_min))
}
row_min
overall_min<-min(row_min)
overall_min
dist
dist<-dist[-1,-1]
dist<-dist[-2,-2]
dist
dist_new<-matrix(c(0.00,NA,NA,0.00),
nrow=2,ncol=2,dimnames=list(c("(A,B)","C"),c("(A,B)","C")))
dist_new
dist_new[1,2]<-min(dist[1,3],dist[2,3])
dist<-matrix(c(0.00,0.71,5.66,0.71,0.00,4.95,5.66,4.95,0.00),
nrow=3,ncol=3,dimnames=list(c("A","B","C"),c("A","B","C")))
dist_new[1,2]<-min(dist[1,3],dist[2,3])
dist_new
dist_new[2,1]<-dist_new[1,2]
dist_new
dist<-matrix(c(0.00,0.71,5.66,0.71,0.00,4.95,5.66,4.95,0.00),
nrow=3,ncol=3,dimnames=list(c("A","B","C"),c("A","B","C")))
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
## overall_min[i]<-min(row_min)
## print(which.min(overall_min))
}
dist<-dist[-1,-1]
dist<-dist[-2,-2]
dist
dist<-matrix(c(0.00,NA,NA,0.00),
nrow=2,ncol=2,dimnames=list(c("(A,B)","C"),c("(A,B)","C")))
dist
dist[1,2]<-min(dist[1,3],dist[2,3])
dist<-matrix(c(0.00,0.71,5.66,0.71,0.00,4.95,5.66,4.95,0.00),
nrow=3,ncol=3,dimnames=list(c("A","B","C"),c("A","B","C")))
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
## overall_min[i]<-min(row_min)
## print(which.min(overall_min))
}
dist_updated<-dist[-1,-1]
dist_updated<-dist[-2,-2]
dist_updated<-matrix(c(0.00,NA,NA,0.00),
nrow=2,ncol=2,dimnames=list(c("(A,B)","C"),c("(A,B)","C")))
dist_updated
dist_updated[1,2]<-min(dist[1,3],dist[2,3])
dist_updated[2,1]<-dist_new[1,2]
dist_updated
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
## overall_min[i]<-min(row_min)
## print(which.min(overall_min))
}
row_min
dist<-matrix(c(0.00,0.71,5.66,0.71,0.00,4.95,5.66,4.95,0.00),
nrow=3,ncol=3,dimnames=list(c("A","B","C"),c("A","B","C")))
min_distance<-function(matrix){
for(i in 1:nrow(matrix)){
for(j in 1:ncol(matrix))
{
if(i!=j){
distances[j]<-matrix[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
## overall_min[i]<-min(row_min)
## print(which.min(overall_min))
}
}
dist_updated<-dist[-1,-1]
dist_updated<-dist[-2,-2]
dist_updated<-matrix(c(0.00,NA,NA,0.00),
nrow=2,ncol=2,dimnames=list(c("(A,B)","C"),c("(A,B)","C")))
dist_updated[1,2]<-min(dist[1,3],dist[2,3])
dist_updated[2,1]<-dist_new[1,2]
dist_updated
row_min
min_distance(dist_updated)
row_min
dist<-matrix(c(0.00,0.71,5.66,0.71,0.00,4.95,5.66,4.95,0.00),
nrow=3,ncol=3,dimnames=list(c("A","B","C"),c("A","B","C")))
min_distance<-function(matrix){
for(i in 1:nrow(matrix)){
for(j in 1:ncol(matrix))
{
if(i!=j){
distances[j]<-matrix[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
## overall_min[i]<-min(row_min)
## print(which.min(overall_min))
}
row_min<-c()
distances<-c()
}
dist_updated<-dist[-1,-1]
dist_updated<-dist[-2,-2]
dist_updated<-matrix(c(0.00,NA,NA,0.00),
nrow=2,ncol=2,dimnames=list(c("(A,B)","C"),c("(A,B)","C")))
ist_updated[1,2]<-min(dist[1,3],dist[2,3])
dist_updated[2,1]<-dist_new[1,2]
dist_updated[1,2]<-min(dist[1,3],dist[2,3])
dist_updated[2,1]<-dist_new[1,2]
min_distance(dist_updated)
row_min
row_min<-c()
distances<-c()
dist<-matrix(c(0.00,0.71,5.66,0.71,0.00,4.95,5.66,4.95,0.00),
nrow=3,ncol=3,dimnames=list(c("A","B","C"),c("A","B","C")))
min_distance<-function(matrix){
for(i in 1:nrow(matrix)){
for(j in 1:ncol(matrix))
{
if(i!=j){
distances[j]<-matrix[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
}
}
min_distance(dist)
dist_updated<-dist[-1,-1]
dist_updated<-dist[-2,-2]
dist_updated<-matrix(c(0.00,NA,NA,0.00),
nrow=2,ncol=2,dimnames=list(c("(A,B)","C"),c("(A,B)","C")))
dist_updated[1,2]<-min(dist[1,3],dist[2,3])
dist_updated[2,1]<-dist_new[1,2]
min_distance(dist_updated)
row_min
min_distance<-function(matrix){
row_min<-c()
distances<-c()
for(i in 1:nrow(matrix)){
for(j in 1:ncol(matrix))
{
if(i!=j){
distances[j]<-matrix[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
## overall_min[i]<-min(row_min)
## print(which.min(overall_min))
}
}
min_distance(dist_updated)
row_min
min_distance<-function(matrix){
for(i in 1:nrow(matrix)){
for(j in 1:ncol(matrix))
{
if(i!=j){
distances[j]<-matrix[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
## overall_min[i]<-min(row_min)
## print(which.min(overall_min))
}
}
min_distance(dist_updated)
row_min
min_distance<-function(matrix){
print(matrix)
for(i in 1:nrow(matrix)){
for(j in 1:ncol(matrix))
{
if(i!=j){
distances[j]<-matrix[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
## overall_min[i]<-min(row_min)
## print(which.min(overall_min))
}
}
matrix
distances
min_distance<-function(matrix=dist){
row_min<-c()
distances<-c()
for(i in 1:nrow(matrix)){
for(j in 1:ncol(matrix))
{
if(i!=j){
distances[j]<-matrix[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
## overall_min[i]<-min(row_min)
## print(which.min(overall_min))
}
}
row_min
min_distance<-function(matrix=dist){
row_min<-c(0)
distances<-c(0)
for(i in 1:nrow(matrix)){
for(j in 1:ncol(matrix))
{
if(i!=j){
distances[j]<-matrix[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
## overall_min[i]<-min(row_min)
## print(which.min(overall_min))
}
}
row_min
min_distance<-function(dist){
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
## overall_min[i]<-min(row_min)
## print(which.min(overall_min))
}
}
row_min
dist<-matrix(c(0.00,0.71,5.66,0.71,0.00,4.95,5.66,4.95,0.00),
nrow=3,ncol=3,dimnames=list(c("A","B","C"),c("A","B","C")))
for(i in 1:nrow(dist)){
for(j in 1:ncol(dist))
{
if(i!=j){
distances[j]<-dist[i,j]
row_min[i]<-min(distances[i!=j])
}else{
next
}
}
## overall_min[i]<-min(row_min)
## print(which.min(overall_min))
}
row_min
dist<-matrix(c(0.00,0.71,5.66,0.71,0.00,4.95,5.66,4.95,0.00),
nrow=3,ncol=3,dimnames=list(c("A","B","C"),c("A","B","C")))
spam = list(c(1,7),
c(2,8),
c(3,8))
setwd("C:/Users/Simarpreet Singh/Desktop/Data Mining Project - Github Clone/fake_news_detection_twitter/src")
source('C:/Users/Simarpreet Singh/Desktop/Data Mining Project - Github Clone/fake_news_detection_twitter/src/svm_3d.R')
source('C:/Users/Simarpreet Singh/Desktop/Data Mining Project - Github Clone/fake_news_detection_twitter/src/svm_3d.R')
source('C:/Users/Simarpreet Singh/Desktop/Data Mining Project - Github Clone/fake_news_detection_twitter/src/svm_3d.R')
